@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {


  :root {
    --background: 0 0% 100%;
    --foreground: 0 0% 10%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 15%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 95% 10%;
    --primary: 0 0% 0%;
    --primary-foreground: 0 0% 100%;
    --secondary: 0 10% 90%;
    --secondary-foreground: 0 0% 0%;
    --muted: -38 10% 95%;
    --muted-foreground: 0 0% 40%;
    --accent: -38 10% 90%;
    --accent-foreground: 0 0% 15%;
    --destructive: 0 50% 50%;
    --destructive-foreground: 0 0% 100%;
    --border: 0 20% 82%;
    --input: 0 20% 50%;
    --ring: 0 0% 0%;
    --radius: 0.5rem;
  }

  .dark {
    --background: 0 50% 5%;
    --foreground: 0 5% 90%;
    --card: 0 50% 0%;
    --card-foreground: 0 5% 90%;
    --popover: 0 50% 5%;
    --popover-foreground: 0 5% 90%;
    --primary: 0 0% 98%;
    --primary-foreground: 0 0% 0%;
    --secondary: 0 30% 10%;
    --secondary-foreground: 0 0% 100%;
    --muted: -38 30% 15%;
    --muted-foreground: 0 5% 60%;
    --accent: -38 30% 15%;
    --accent-foreground: 0 5% 90%;
    --destructive: 0 100% 30%;
    --destructive-foreground: 0 5% 90%;
    --border: 0 30% 18%;
    --input: 0 30% 18%;
    --ring: 0 0% 98%;
    --radius: 0.5rem;
  }


  .light {
    --background: 0 0% 100%;
    --foreground: 0 0% 10%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 15%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 95% 10%;
    --primary: 0 0% 0%;
    --primary-foreground: 0 0% 100%;
    --secondary: 0 10% 90%;
    --secondary-foreground: 0 0% 0%;
    --muted: -38 10% 95%;
    --muted-foreground: 0 0% 40%;
    --accent: -38 10% 90%;
    --accent-foreground: 0 0% 15%;
    --destructive: 0 50% 50%;
    --destructive-foreground: 0 0% 100%;
    --border: 0 20% 82%;
    --input: 0 20% 50%;
    --ring: 0 0% 0%;
    --radius: 0.5rem;
  }

}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;





  }



}



@keyframes fadein {
  0% {
    opacity: 0;
    transform: translateY(-20%);
  }

  50% {
    opacity: 0;
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}



.fadein {
  animation: fadein 1s;
}

.fadeout {
  animation: fadeout 0.2s;
  animation-fill-mode: forwards;

}


@keyframes fadeout {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}


@keyframes wave {
  0% {
    transform: translateY(0);
  }

  50% {
    transform: translateY(-10px);
  }

  100% {
    transform: translateY(0);
  }
}

::-webkit-scrollbar {
  display: none;
}

.loading-animation {
  display: inline-block;
  position: relative;
  overflow: hidden;
  animation: wave 1s infinite;
}

.loading-animation::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(to right, transparent, var(--foreground), transparent);
  transform: translateX(-100%);
  animation: loading 2s infinite;
}

@keyframes loading {
  0% {
    transform: translateX(-100%);
  }

  100% {
    transform: translateX(100%);
  }
}

.grid-container {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
}

/* HTML: <div class="loader"></div> */
.loader {
  width: 100px;
  height: 40px;
  --g: radial-gradient(farthest-side, #0000 calc(95% - 3px), #fff calc(100% - 3px) 98%, #0000 101%) no-repeat;
  background: var(--g), var(--g), var(--g);
  background-size: 30px 30px;
  animation: l9 1s infinite alternate;
}

@keyframes l9 {
  0% {
    background-position: 0 50%, 50% 50%, 100% 50%;
  }

  20% {
    background-position: 0 0, 50% 50%, 100% 50%;
  }

  40% {
    background-position: 0 100%, 50% 0, 100% 50%;
  }

  60% {
    background-position: 0 50%, 50% 100%, 100% 0;
  }

  80% {
    background-position: 0 50%, 50% 50%, 100% 100%;
  }

  100% {
    background-position: 0 50%, 50% 50%, 100% 50%;
  }
}



@media (max-width: 600px) {
  .grid-container {
    grid-template-columns: 1fr;
  }

  .main-buttons {
    flex-direction: column;
    gap: 4;
    margin-inline: 80px;
  }
}

@media (min-width: 1000px) {
  .grid-container {
    grid-template-columns: repeat(5, 1fr);
  }
}